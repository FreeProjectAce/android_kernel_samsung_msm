--- drivers/gpu/msm/kgsl.h	2011-04-03 14:16:01.000000000 +0700
+++ drivers/gpu/msm/kgsl.h	2011-12-23 19:21:50.000000000 +0700
@@ -122,22 +147,18 @@
 	/* Mutex for accessing the process list */
 	struct mutex process_mutex;
 
-	struct kgsl_pagetable *global_pt;
-
-	/* Size (in bytes) for each pagetable */
-	unsigned int ptsize;
+	/* Mutex for protecting the device list */
+	struct mutex devlock;
 
-	/* The virtual address range for each pagetable as set by the
-	   platform */
+	struct kgsl_ptpool ptpool;
 
-	unsigned int pt_va_size;
 	struct {
-		unsigned long *bitmap;
-		int entries;
-		spinlock_t lock;
-		void *hostptr;
-		unsigned int physaddr;
-	} ptpool;
+		unsigned int vmalloc;
+		unsigned int vmalloc_max;
+		unsigned int coherent;
+		unsigned int coherent_max;
+		unsigned int histogram[16];
+	} stats;
 };
 
 extern struct kgsl_driver kgsl_driver;
@@ -168,10 +181,35 @@
 	unsigned int pt_base, unsigned int gpuaddr, unsigned int *size);
 int kgsl_idle(struct kgsl_device *device, unsigned int timeout);
 int kgsl_setstate(struct kgsl_device *device, uint32_t flags);
-int kgsl_regread(struct kgsl_device *device, unsigned int offsetwords,
-			unsigned int *value);
-int kgsl_regwrite(struct kgsl_device *device, unsigned int offsetwords,
-			unsigned int value);
+
+static inline void kgsl_regread(struct kgsl_device *device,
+				unsigned int offsetwords,
+				unsigned int *value)
+{
+	device->ftbl.device_regread(device, offsetwords, value);
+}
+
+static inline void kgsl_regwrite(struct kgsl_device *device,
+				 unsigned int offsetwords,
+				 unsigned int value)
+{
+	device->ftbl.device_regwrite(device, offsetwords, value);
+}
+
+static inline void kgsl_regread_isr(struct kgsl_device *device,
+				unsigned int offsetwords,
+				unsigned int *value)
+{
+	device->ftbl.device_regread_isr(device, offsetwords, value);
+}
+
+static inline void kgsl_regwrite_isr(struct kgsl_device *device,
+				 unsigned int offsetwords,
+				 unsigned int value)
+{
+	device->ftbl.device_regwrite_isr(device, offsetwords, value);
+}
+
 int kgsl_check_timestamp(struct kgsl_device *device, unsigned int timestamp);
 
 int kgsl_setup_pt(struct kgsl_pagetable *);
